// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarehouseInventory.API.Context;

namespace WarehouseInventory.API.Migrations
{
    [DbContext(typeof(WarehouseInventoryContext))]
    [Migration("20200321163800_UpdateForSupplierInfo")]
    partial class UpdateForSupplierInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WarehouseInventory.API.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SellingPrice")
                        .HasColumnType("float");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a003a0aa-75bf-4334-b255-c477c0d827a6"),
                            Amount = 20,
                            Description = "Comes in multiple shapes.",
                            Name = "Soap",
                            SellingPrice = 4.5,
                            SupplierId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35")
                        },
                        new
                        {
                            Id = new Guid("392f3c6e-77a4-4a22-8269-e8b74da0996e"),
                            Amount = 123,
                            Description = "Model paint",
                            Name = "Citedel paint",
                            SellingPrice = 8.5,
                            SupplierId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96")
                        },
                        new
                        {
                            Id = new Guid("fa2f4c62-ab3c-4136-8d46-306d9f550794"),
                            Amount = 402,
                            Description = "Collectable card game packs",
                            Name = "Magic the Gathering Packs",
                            SellingPrice = 7.4000000000000004,
                            SupplierId = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09")
                        });
                });

            modelBuilder.Entity("WarehouseInventory.API.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Address = "123 Clean Avenue, NH",
                            Email = "Test@Test.com",
                            Name = "Mr. Clean's Factory",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            Address = "London",
                            Name = "Games Workshop",
                            PhoneNumber = "444-444-3333"
                        },
                        new
                        {
                            Id = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"),
                            Address = "Californa",
                            Email = "Resupply@WTC.com",
                            Name = "Wizards of the Coast"
                        },
                        new
                        {
                            Id = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"),
                            Address = "West Virgina",
                            Email = "BM@BuyersMarkett.com",
                            Name = "Buyers Markett"
                        });
                });

            modelBuilder.Entity("WarehouseInventory.API.Entities.Item", b =>
                {
                    b.HasOne("WarehouseInventory.API.Entities.Supplier", "Supplier")
                        .WithMany("Items")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
